name: Media Fetcher

on:
  workflow_dispatch:
    inputs:
      url:
        description: 'Media URL'
        required: true
        type: string
      account_type:
        description: 'Cookies Account Type (primary/backup)'
        required: false
        type: string
        default: 'primary'
      resumeUrl:
        description: 'Webhook URL to resume n8n'
        required: true
        type: string

jobs:
  fetch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.local/bin
            ~/.local/lib
            ~/.cache/yt-dlp-version
          key: ${{ runner.os }}-media-tools-permanent-v2-${{ github.run_number }}
          restore-keys: |
            ${{ runner.os }}-media-tools-permanent-v2-
            ${{ runner.os }}-media-tools-

      - name: Install & Cache yt-dlp
        run: |
          mkdir -p ~/.local/bin ~/.cache
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          
          # Get latest version info
          LATEST_VERSION=$(curl -s https://api.github.com/repos/yt-dlp/yt-dlp/releases/latest | grep '"tag_name"' | cut -d'"' -f4)
          
          # Check if update needed
          if [ -f ~/.local/bin/yt-dlp ] && [ -f ~/.cache/yt-dlp-version ]; then
            CACHED_VERSION=$(cat ~/.cache/yt-dlp-version)
            if [ "$CACHED_VERSION" = "$LATEST_VERSION" ]; then
              echo "âœ… yt-dlp $CACHED_VERSION (cached)"
              chmod +x ~/.local/bin/yt-dlp
              exit 0
            fi
          fi
          
          # Download latest
          echo "ðŸ“¥ Installing yt-dlp $LATEST_VERSION"
          curl -sL "https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp" -o ~/.local/bin/yt-dlp
          chmod +x ~/.local/bin/yt-dlp
          echo "$LATEST_VERSION" > ~/.cache/yt-dlp-version
          echo "âœ… yt-dlp $LATEST_VERSION installed"
                
      - name: Install & Cache ffmpeg
        run: |
          # Add to PATH first
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          
          # Check cache
          if [ -f ~/.local/bin/ffmpeg ] && ~/.local/bin/ffmpeg -version &>/dev/null; then
            echo "âœ… ffmpeg (cached)"
          else
            # Install fresh
            echo "ðŸ“¥ Installing ffmpeg (~2 min)"
            sudo apt-get update -qq
            sudo apt-get install -y -qq ffmpeg
            
            # Cache binaries to user space
            mkdir -p ~/.local/bin
            cp /usr/bin/ffmpeg ~/.local/bin/
            cp /usr/bin/ffprobe ~/.local/bin/
            echo "âœ… ffmpeg cached to ~/.local/bin"
          fi

      - name: Process Media
        run: |
          # Setup cookies
          if [ "${{ github.event.inputs.account_type }}" = "backup" ]; then
            echo "${{ secrets.BACKUP_INSTA_COOKIES }}" > cookies.txt
          else
            echo "${{ secrets.INSTA_COOKIES }}" > cookies.txt
          fi
          
          # Download with optimal settings
          yt-dlp --cookies cookies.txt "${{ github.event.inputs.url }}" \
            --get-description > description.txt
          
          yt-dlp --cookies cookies.txt "${{ github.event.inputs.url }}" \
            -o "reel.mp4" --recode-video mp4 \
            --no-playlist --no-warnings

      - name: Send to n8n
        run: |
          # Encode and send
          base64 -w 0 reel.mp4 > reel.b64
          base64 -w 0 description.txt > desc.b64
          
          curl -X POST "${{ github.event.inputs.resumeUrl }}" \
            -H "Content-Type: application/json" \
            -d '{
              "status": "completed",
              "message": "Media processing complete.",
              "media": "'$(cat reel.b64)'",
              "description": "'$(cat desc.b64)'"
            }'

      - name: Save Cache
        if: always()
        uses: actions/cache/save@v4
        with:
          path: |
            ~/.cache/pip
            ~/.local/bin
            ~/.local/lib
            ~/.cache/yt-dlp-version
          key: ${{ runner.os }}-media-tools-permanent-v2-${{ github.run_number }}